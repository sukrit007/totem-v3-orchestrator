# Cloudformation template for automated orchestrator builds
Parameters:
  CodePipelineBucketName:
    Type: String
    Description: S3 bucket used for uploading artifacts for CodePipeline
    MinLength: 1
    Default: totem-v3

  GitBranch:
    Type: String
    Description: Git branch for source repository
    MinLength: 1
    Default: feature_git-workflow

  GitOwner:
    Type: String
    Description: Owner of the github repository
    Default: totem

  GitRepo:
    Type: String
    Description: Orchestrator repository
    Default: totem-v3-orchestrator

  GithubOauthToken:
    Type: String
    NoEcho: true
    Description: Github Oauthtoken
    MinLength: 1

  GlobalStack:
    Description: Name of totem global stack
    Type: String
    MinLength: 1
    Default: 'totem-global'

  OrchestratorEnvironmentStack:
    Description: Name of the orchestrator environment stack
    Type: String
    MinLength: 1
    Default: 'totem-orchestrator-environment'

  OrchestratorStackName:
    Description: Name of the orchestrator stack to be created / updated in the pipeline
    Type: String
    MinLength: 1
    Default: 'totem-orchestrator-development'

Resources:
  CodeBuild:
    Type: "AWS::CodeBuild::Project"
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Description: !Sub "Totem-v3 Orchestrator ${GitBranch} build"
      Environment:
        Type: LINUX_CONTAINER
        Image: "aws/codebuild/eb-nodejs-6.10.0-amazonlinux-64:4.0.0"
        ComputeType: BUILD_GENERAL1_SMALL
        EnvironmentVariables:
          - Name: TOTEM_BUCKET
            Value:
              Fn::ImportValue: !Sub "${GlobalStack}-TotemBucket"
      ServiceRole:
        Fn::ImportValue: !Sub "${OrchestratorEnvironmentStack}-CodeBuildRole"
      Source:
        Type: CODEPIPELINE
      TimeoutInMinutes: 5

  CodePipeline:
    Type: "AWS::CodePipeline::Pipeline"
    DependsOn: CodeBuild
    Properties:
      ArtifactStore:
        Type: S3
        Location:
          Fn::ImportValue: !Sub "${GlobalStack}-TotemBucket"
      RoleArn:
        Fn::ImportValue: !Sub "${OrchestratorEnvironmentStack}-CodePipelineRoleArn"
      Stages:
        - Name: Source
          Actions:
            - Name: source
              ActionTypeId:
                Category: Source
                Owner: "ThirdParty"
                Provider: "GitHub"
                Version: 1
              InputArtifacts: []
              OutputArtifacts:
                - Name: source
              Configuration:
                Owner: !Ref GitOwner
                Repo: !Ref GitRepo
                Branch: !Ref GitBranch
                OAuthToken: !Ref GithubOauthToken
              RunOrder: 1

        - Name: Build
          Actions:
            - Name: CodeBuild
              ActionTypeId:
                Category: Build
                Owner: "AWS"
                Provider: "CodeBuild"
                Version: 1
              InputArtifacts:
                - Name: source
              OutputArtifacts:
                - Name: build
              Configuration:
                ProjectName: !Ref CodeBuild
              RunOrder: 1

        - Name: Deploy
          Actions:
            - Name: SAMCreateChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: "AWS"
                Provider: "CloudFormation"
                Version: 1
              InputArtifacts:
                - Name: build
              OutputArtifacts: []
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                RoleArn:
                  Fn::ImportValue: !Sub "${OrchestratorEnvironmentStack}-LambdaDeployRoleArn"
                StackName: !Ref OrchestratorStackName
                TemplatePath: "build::packaged-template.yml"
                ParameterOverrides: !Sub |
                  {
                    "OrchestratorEnvironmentStack": "${OrchestratorEnvironmentStack}",
                    "GlobalStack": "${GlobalStack}"
                  }
              RunOrder: 1

            - Name: SAMExecuteChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: "AWS"
                Provider: "CloudFormation"
                Version: 1
              OutputArtifacts: []
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                StackName: !Ref OrchestratorStackName
              RunOrder: 2